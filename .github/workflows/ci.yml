name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: 'Run Terraform'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      - name: Build docker image
        id: build-docker-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/dags-ci-project:$TAG .
          docker push $REGISTRY/dags-ci-project:$TAG
          IMAGE=$(echo $REGISTRY/dags-ci-project:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to AWS AppRunner (Dev)
        run: |
          cd terraform/dev
          terraform init
          terraform plan
          terraform apply -auto-approve -var-file=dev.tfvars

  health-check-dev:
    runs-on: ubuntu-latest
    needs: deploy-dev

    steps:
      - name: Check application health
        run: |
          # Comandos para verificar a saúde da aplicação

  deploy-prod:
    runs-on: ubuntu-latest
    needs: health-check-dev

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (Prod)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS AppRunner (Prod)
        run: |
          cd terraform/prod
          terraform init
          terraform plan
          terraform apply -auto-approve -var-file=prod.tfvars